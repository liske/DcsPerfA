#!/usr/bin/env perl

# DcsPerfA - DataCore Server Performance Analyzer
#
# Authors:
#   Thomas Liske <thomas@fiasko-nw.net>
#
# Copyright Holder:
#   2013 (C) Thomas Liske [http://fiasko-nw.net/~thomas/]
#
# License:
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this package; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#

use Mojolicious::Lite;
use Mojo::IOLoop;;
use JSON;

get '/' => sub {
  my $self = shift;
  $self->render_static('index.html');
};

get '/css' => sub {
  my $self = shift;
  $self->render_static('/css');
};

get '/js' => sub {
  my $self = shift;
  $self->render_static('/js');
};

get '/raw' => sub {
  my $self = shift;
  $self->render_static('/raw');
};

get '/plot' => sub {
  my $self = shift;
  $self->render(data => 
'<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg"
        version="1.1" baseProfile="full"
        width="700px" height="400px" viewBox="0 0 700 400">
 
        <!-- AnschlÃ¼sse links und rechts -->
        <line x1="0" y1="200" x2="700" y2="200" stroke="black" stroke-width="20px"/>
        <!-- Das Rechteck -->
        <rect x="100" y="100" width="500" height="200" fill="white" stroke="black" stroke-width="20px"/>
        <!-- Der Schleifer -->
        <line x1="180" y1="370" x2="500" y2="50" stroke="black" stroke-width="15px"/>
        <!-- Die Pfeilspitze -->
        <polygon points="585 0 525 25 585 50" transform="rotate(135 525 25)"/>
</svg>', format => 'svg');
};

my @chars = ('a'..'z', 'A'..'Z', 0..9);
app->secret(join '', map { @chars[rand @chars] } 1 .. 24);
app->start;
